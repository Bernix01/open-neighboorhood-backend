{"version":3,"sources":["Auth.ts","GraphQLClient.ts","components/login/Page.tsx","components/layouts/main.tsx","components/HomePage.tsx","components/NotFound.tsx","components/RegisterResidentPage.tsx","components/ResidentsPage.tsx","components/RegisterStaff.tsx","components/StaffPage.tsx","components/RegisterPayment.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["createAuthProvider","accessTokenKey","onUpdateToken","token","fetch","method","body","refreshToken","then","r","json","useAuth","authFetch","login","client","GraphQLClient","url","theme","global","colors","background","light","dark","font","family","LOGIN_QUERY","useForm","register","handleSubmit","useMutation","print","doLogin","mutationLoading","loading","mutationError","error","onSubmit","a","user","password","variables","data","accessToken","Grommet","full","Main","fill","flex","overflow","justify","direction","align","Image","src","process","fit","style","maxHeight","Heading","level","textAlign","Form","FormField","name","label","required","TextInput","ref","maxLength","minLength","icon","Lock","placeholder","type","graphQLErrors","message","Button","disabled","LinkNext","primary","secondary","SidebarFooter","Box","Avatar","margin","SidebarHeader","pad","border","color","size","round","Home","SidebarButtonIcon","hover","index","vertical","Analytics","key","Stakeholder","Calculator","SidebarButton","title","to","match","useRouteMatch","path","strict","exact","sensitive","useState","over","setOver","tooltipColor","opacity","useRef","onMouseOver","onMouseLeave","onFocus","onBlur","hoverIndicator","active","plain","current","Drop","left","target","animation","corner","routes","getActionComponent","action","Edit","Trash","onClick","Add","DashboardLayout","children","actions","grommet","Grid","columns","rows","areas","start","end","gap","Sidebar","header","footer","gridArea","Nav","map","route","Header","NotFound","DateInput","format","value","Date","toISOString","amountFormatter","Intl","NumberFormat","currency","minimumFractionDigits","property","render","datum","date","toLocaleDateString","Meter","values","percent","thickness","paid","aggregate","DataTable","location","RegisterStaff","pattern","lastname","React","setValue","Select","options","onChange","option","App","logged","Provider","StaffPage","RegisterPayment","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.fbbc15e7.chunk.js","sourcesContent":["import { createAuthProvider } from 'react-token-auth';\n\nexport const [useAuth, authFetch, login, logout] = createAuthProvider<{\n  accessToken: string;\n  refreshToken: string;\n}>({\n  accessTokenKey: 'accessToken',\n  onUpdateToken: (\n    token // TODO: use graphene refresh mutation\n  ) =>\n    fetch('/update-token', {\n      method: 'POST',\n      body: token.refreshToken,\n    }).then((r) => r.json()),\n});\n","import { GraphQLClient } from 'graphql-hooks';\nimport { authFetch } from './Auth';\n\nexport const client = new GraphQLClient({\n  url: 'http://localhost:8000/graphql/',\n  fetch: (...args) => authFetch(...args),\n});\n","import React from 'react';\nimport {\n  Grommet,\n  Main,\n  Heading,\n  Form,\n  FormField,\n  TextInput,\n  Button,\n  Image,\n  ThemeType,\n} from 'grommet';\nimport { Lock, LinkNext } from 'grommet-icons';\nimport { useMutation } from 'graphql-hooks';\nimport { useForm } from 'react-hook-form';\nimport { login } from 'src/Auth';\nimport { print } from 'graphql';\nimport { loader } from 'graphql.macro';\nimport {\n  LoginMutationVariables,\n  ObtainJsonWebToken,\n} from 'src/generated/graphql';\n\nconst theme: ThemeType = {\n  global: {\n    colors: {\n      background: {\n        light: '#ffffff',\n        dark: '#000000',\n      },\n    },\n    font: {\n      family:\n        '-apple-system,\\n         BlinkMacSystemFont, \\n         \"Segoe UI\", \\n         Roboto, \\n         Oxygen, \\n         Ubuntu, \\n         Cantarell, \\n         \"Fira Sans\", \\n         \"Droid Sans\",  \\n         \"Helvetica Neue\", \\n         Arial, sans-serif,  \\n         \"Apple Color Emoji\", \\n         \"Segoe UI Emoji\", \\n         \"Segoe UI Symbol\"',\n    },\n  },\n};\n\nconst LOGIN_QUERY = loader('./login.graphql');\n\ntype FormData = {\n  user: string;\n  password: string;\n};\n\ntype LoginResponse = {\n  token: string;\n};\n\ntype LoginError = {\n  message: string;\n};\n\ntype LoginVariables = {\n  user: string;\n  password: string;\n};\n\nexport default () => {\n  const { register, handleSubmit } = useForm<FormData>();\n\n  const [\n    doLogin,\n    { loading: mutationLoading, error: mutationError },\n  ] = useMutation<ObtainJsonWebToken, LoginMutationVariables, LoginError>(\n    print(LOGIN_QUERY)\n  );\n\n  const onSubmit = handleSubmit(async ({ user, password }) => {\n    const { data, error } = await doLogin({ variables: { user, password } });\n    if (error) {\n      // TODO: handle?\n    } else {\n      const { token } = data;\n\n      login({\n        refreshToken: token,\n        accessToken: token,\n      });\n    }\n  });\n\n  return (\n    <Grommet full theme={theme}>\n      <Main\n        fill=\"vertical\"\n        flex=\"grow\"\n        overflow=\"auto\"\n        justify=\"center\"\n        direction=\"column\"\n        align=\"center\"\n      >\n        <Image\n          src={`${process.env.PUBLIC_URL}/img/logo.png`}\n          fill=\"horizontal\"\n          fit=\"contain\"\n          style={{ maxHeight: '220px' }}\n        />\n        <Heading level=\"3\" textAlign=\"center\">\n          Iniciar sesión\n        </Heading>\n        <Form onSubmit={onSubmit}>\n          <FormField name=\"user\" label=\"Correo\" required>\n            <TextInput name=\"user\" ref={register} />\n          </FormField>\n          <FormField\n            name=\"password\"\n            maxLength={50}\n            minLength={4}\n            label=\"Contraseña\"\n            required\n          >\n            <TextInput\n              name=\"password\"\n              icon={<Lock />}\n              ref={register}\n              placeholder=\"****\"\n              type=\"password\"\n            />\n          </FormField>\n          {mutationError && mutationError.graphQLErrors ? (\n            <p>{mutationError.graphQLErrors[0].message}</p>\n          ) : (\n            <></>\n          )}\n          <Button\n            label=\"Ingresar\"\n            disabled={mutationLoading}\n            icon={<LinkNext />}\n            primary\n            secondary={false}\n            type=\"submit\"\n          />\n        </Form>\n      </Main>\n    </Grommet>\n  );\n};\n","import React, { useRef, useState, MouseEventHandler } from 'react';\n\nimport {\n  Avatar,\n  Button,\n  Box,\n  Drop,\n  grommet,\n  Grommet,\n  Nav,\n  Sidebar,\n  Grid,\n  Header,\n  Heading,\n} from 'grommet';\n\nimport {\n  Analytics,\n  Calculator,\n  Home,\n  Stakeholder,\n  Edit,\n  Trash,\n  Add,\n  Lock,\n} from 'grommet-icons';\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nconst src = '//s.gravatar.com/avatar/b7fb138d53ba0f573212ccce38a7c43b?s=80';\n\n// const NotificationIcon = () => (\n//   <Stack anchor=\"top-right\">\n//     <Notification />\n//     <Box background=\"accent-1\" pad=\"xsmall\" round responsive={false} />\n//   </Stack>\n// );\n\nconst SidebarFooter = () => (\n  <Box>\n    <Avatar margin=\"small\" src={src} />\n  </Box>\n);\n\nconst SidebarHeader = () => (\n  <Box pad=\"small\">\n    <Avatar border={{ color: 'white', size: 'small' }} round=\"medium\">\n      <Home color=\"white\" />\n    </Avatar>\n  </Box>\n);\n\nconst iconsMap = (color: string) => [\n  <Analytics key=\"0\" color={color} />,\n  <Stakeholder key=\"1\" color={color} />,\n  <Calculator key=\"2\" color={color} />,\n  <Lock key=\"3\" color={color} />,\n];\n\nconst SidebarButtonIcon: React.FC<{ hover: boolean; index: number }> = ({\n  hover,\n  index,\n}) => {\n  return (\n    <Box pad={{ vertical: 'small' }} align=\"center\">\n      {iconsMap(hover ? 'black' : 'white')[index]}\n    </Box>\n  );\n};\n\nconst SidebarButton: React.FC<{\n  title: string;\n  to: string;\n  index: number;\n}> = ({ title, index, to }) => {\n  const match = useRouteMatch({\n    path: to,\n    strict: true,\n    exact: to === '/',\n    sensitive: true,\n  });\n  const [over, setOver] = useState<boolean>(false);\n  const tooltipColor = { color: 'accent-1', opacity: 0.9 };\n\n  const ref = useRef<HTMLButtonElement>(null);\n  return (\n    <Link to={to}>\n      <Box fill=\"horizontal\">\n        <Button\n          ref={ref}\n          onMouseOver={() => setOver(true)}\n          onMouseLeave={() => setOver(false)}\n          onFocus={() => setOver(false)}\n          onBlur={() => setOver(false)}\n          hoverIndicator={tooltipColor}\n          active={match !== null}\n          plain\n        >\n          <SidebarButtonIcon hover={over} index={index} />\n        </Button>\n        {ref.current && over && (\n          <Drop align={{ left: 'right' }} target={ref.current} plain>\n            <Box\n              animation=\"slideRight\"\n              margin=\"xsmall\"\n              pad=\"small\"\n              background={tooltipColor}\n              round={{ size: 'medium', corner: 'right' }}\n            >\n              {title}\n            </Box>\n          </Drop>\n        )}\n      </Box>\n    </Link>\n  );\n};\n\nconst routes = [\n  { icon: 'Analytics', title: 'Dashboard', to: '/' },\n  { icon: 'Stakeholder', title: 'Residentes', to: '/residents' },\n  { icon: 'Calculator', title: 'Alícuotas', to: '/alicuots' },\n  { icon: 'Lock', title: 'Staff', to: '/staff' },\n];\n\ninterface Action {\n  type: 'add' | 'delete' | 'edit';\n  onClick?: MouseEventHandler;\n  to?: string;\n}\n\nconst DashboardLayout: React.FunctionComponent<{ actions?: Action[] }> = ({\n  children,\n  actions,\n}) => (\n  <Grommet theme={grommet} full>\n    <Grid\n      columns={['auto', 'flex']}\n      rows={['auto', 'flex']}\n      areas={[\n        { name: 'nav', start: [1, 0], end: [1, 0] },\n        { name: 'sidebar', start: [0, 0], end: [0, 1] },\n        { name: 'main', start: [1, 1], end: [1, 1] },\n      ]}\n      gap=\"small\"\n      pad=\"xsmall\"\n      fill=\"vertical\"\n    >\n      <Sidebar\n        overflow=\"auto\"\n        background=\"brand\"\n        header={<SidebarHeader />}\n        footer={<SidebarFooter />}\n        pad=\"none\"\n        gridArea=\"sidebar\"\n        round=\"medium\"\n      >\n        <Nav>\n          {routes.map((route, index) => (\n            <SidebarButton\n              to={route.to}\n              key={route.title}\n              title={route.title}\n              index={index}\n            />\n          ))}\n        </Nav>\n      </Sidebar>\n      <Box gridArea=\"main\">{children}</Box>\n      <Header\n        align=\"center\"\n        direction=\"row\"\n        flex={false}\n        justify=\"between\"\n        gap=\"medium\"\n        gridArea=\"nav\"\n      >\n        <Heading level=\"2\" size=\"medium\" textAlign=\"start\" color=\"black\">\n          Urbanización La alameda\n        </Heading>\n        <Box direction=\"row-responsive\" justify=\"end\" align=\"end\">\n          {actions &&\n            actions.map((action) => {\n              if (action.to) {\n                return (\n                  <Link to={action.to} key={action.type}>\n                    {getActionComponent(action)}\n                  </Link>\n                );\n              }\n              return getActionComponent(action);\n            })}\n        </Box>\n      </Header>\n    </Grid>\n  </Grommet>\n);\n\nfunction getActionComponent(action: Action) {\n  switch (action.type) {\n    case 'edit':\n      return <Button key={action.type} label=\"editar\" icon={<Edit />} plain />;\n    case 'delete':\n      return <Button label=\"borrar\" key={action.type} icon={<Trash />} plain />;\n    case 'add':\n      return (\n        <Button\n          label=\"agregar\"\n          onClick={action.onClick}\n          key={action.type}\n          icon={<Add />}\n          plain\n        />\n      );\n    default:\n      return <span>unsuported action</span>;\n  }\n}\n\nexport default DashboardLayout;\n","import React from 'react';\nimport DashboardLayout from './layouts/main';\n\nexport default () => (\n  <DashboardLayout>\n    <p>Home</p>\n  </DashboardLayout>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound = () => (\n  <div>\n    <h1>404 - Not Found!</h1>\n    <Link to=\"/\">Go Home</Link>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport {\n  Heading,\n  Form,\n  FormField,\n  TextInput,\n  Button,\n  DateInput,\n} from 'grommet';\nimport { Lock, LinkNext } from 'grommet-icons';\nimport { useForm } from 'react-hook-form';\nimport DashboardLayout from './layouts/main';\n\ntype FormData = {\n  user: string;\n  password: string;\n};\n\ntype RegisterError = {\n  message: string;\n};\n\ntype RegisterVariables = {\n  id_card: string;\n  name: string;\n  brith: string;\n  user: string;\n  password: string;\n};\n\nexport default () => {\n  const { register } = useForm<FormData>();\n\n  return (\n    <DashboardLayout>\n      <Heading level=\"3\">Registro Residente</Heading>\n      <Form>\n        <FormField name=\"id_card\" label=\"Cédula\" required>\n          <TextInput name=\"id_card\" ref={register} />\n        </FormField>\n        <FormField name=\"name\" label=\"Nombre\" required>\n          <TextInput name=\"name\" ref={register} />\n        </FormField>\n        <FormField name=\"birth\" label=\"Fecha de nacimiento\" required>\n          <DateInput format=\"mm/dd/yyyy\" value={new Date().toISOString()} />\n        </FormField>\n        <FormField name=\"user\" label=\"Correo\" required>\n          <TextInput name=\"user\" type=\"email\" ref={register} />\n        </FormField>\n        <FormField\n          name=\"password\"\n          maxLength={50}\n          minLength={4}\n          label=\"Contraseña\"\n          required\n        >\n          <TextInput\n            name=\"password\"\n            icon={<Lock />}\n            ref={register}\n            placeholder=\"****\"\n            type=\"password\"\n          />\n        </FormField>\n\n        <Button\n          label=\"Registrar\"\n          icon={<LinkNext />}\n          primary\n          secondary={false}\n          type=\"submit\"\n        />\n      </Form>\n    </DashboardLayout>\n  );\n};\n","import React from 'react';\nimport {\n  Box,\n  grommet,\n  Grommet,\n  Heading,\n  DataTable,\n  Meter,\n  ColumnConfig,\n} from 'grommet';\n\nimport { useRouteMatch } from 'react-router-dom';\nimport DashboardLayout from './layouts/main';\n\nexport declare type AlignType = 'left' | 'center' | 'right';\n\nexport default () => {\n  const match = useRouteMatch();\n\n  const amountFormatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n  });\n\n  const columns: ColumnConfig<{\n    date?: string | number | Date;\n    percent?: number;\n    paid?: number;\n  }>[] = [\n    {\n      property: 'name',\n      header: 'Name',\n      primary: true,\n      footer: 'Total',\n    },\n    {\n      property: 'location',\n      header: 'location',\n    },\n    {\n      property: 'date',\n      header: 'Date',\n      render: (datum) =>\n        datum.date && new Date(datum.date).toLocaleDateString('en-US'),\n      align: 'end',\n    },\n    {\n      property: 'percent',\n      header: 'Percent Complete',\n      render: (datum) => (\n        <Box pad={{ vertical: 'xsmall' }}>\n          <Meter\n            values={[{ value: datum.percent! }]}\n            thickness=\"small\"\n            size=\"small\"\n          />\n        </Box>\n      ),\n    },\n    {\n      property: 'paid',\n      header: 'Paid',\n      render: (datum) => amountFormatter.format(datum.paid! / 100),\n      align: 'end',\n      aggregate: 'sum',\n      footer: { aggregate: true },\n    },\n  ];\n\n  const DATA = [\n    {\n      name: 'Alan',\n      location: '',\n      date: '',\n      percent: 0,\n      paid: 0,\n    },\n    {\n      name: 'Bryan',\n      location: 'Mz8968-V8',\n      date: '2018-06-10',\n      percent: 30,\n      paid: 1234,\n    },\n    {\n      name: 'Chris',\n      location: 'Mz8968-V8',\n      date: '2018-06-09',\n      percent: 40,\n      paid: 2345,\n    },\n    {\n      name: 'Eric',\n      location: 'Mz8968-V8',\n      date: '2018-06-11',\n      percent: 80,\n      paid: 3456,\n    },\n    {\n      name: 'Doug',\n      location: 'Mz8968-V8',\n      date: '2018-06-10',\n      percent: 60,\n      paid: 1234,\n    },\n    {\n      name: 'Jet',\n      location: 'Mz8968-V8',\n      date: '2018-06-09',\n      percent: 40,\n      paid: 3456,\n    },\n    {\n      name: 'Michael',\n      location: 'Mz8968-V8',\n      date: '2018-06-11',\n      percent: 50,\n      paid: 1234,\n    },\n    {\n      name: 'Tracy',\n      location: 'Mz8968-V8',\n      date: '2018-06-10',\n      percent: 10,\n      paid: 2345,\n    },\n  ];\n\n  return (\n    <DashboardLayout actions={[{ type: 'add', to: `${match.path}/register` }]}>\n      <Heading level=\"3\">Residentes</Heading>\n      <Grommet theme={grommet}>\n        <Box align=\"center\" pad=\"large\">\n          <DataTable columns={columns} data={DATA} />\n        </Box>\n      </Grommet>\n    </DashboardLayout>\n  );\n};\n","import React from 'react';\nimport {\n  Heading,\n  Form,\n  FormField,\n  TextInput,\n  Button,\n  DateInput,\n} from 'grommet';\nimport { Lock, LinkNext } from 'grommet-icons';\nimport { useForm } from 'react-hook-form';\nimport DashboardLayout from './layouts/main';\n\ntype FormData = {\n  user: string;\n  password: string;\n};\n\ntype RegisterError = {\n  message: string;\n};\n\ntype RegisterVariables = {\n  name: string;\n  brith: string;\n  telefono: string;\n  address: string;\n  user: string;\n  password: string;\n};\n\nconst RegisterStaff: React.FC = () => {\n  const { register } = useForm<FormData>();\n\n  return (\n    <DashboardLayout>\n      <Heading level=\"3\" textAlign=\"center\">\n        Registro Staff\n      </Heading>\n      <Form>\n        <FormField\n          name=\"birth\"\n          label=\"Birth\"\n          placeholder=\"Fecha de Nacimiento\"\n          required\n        >\n          <DateInput format=\"mm/dd/yyyy\" value={new Date().toISOString()} />\n        </FormField>\n        <FormField\n          name=\"telefono\"\n          label=\"Telefono\"\n          placeholder=\"Telefono\"\n          required\n        >\n          <TextInput name=\"telefono\" pattern=\"[0-9]{10}\" ref={register} />\n        </FormField>\n        <FormField\n          name=\"id_card\"\n          label=\"Address\"\n          placeholder=\"Direccion\"\n          required\n        >\n          <TextInput name=\"address\" ref={register} />\n        </FormField>\n        <FormField name=\"name\" label=\"Name\" placeholder=\"Nombre\" required>\n          <TextInput name=\"name\" ref={register} />\n        </FormField>\n        <FormField name=\"user\" label=\"Correo\" placeholder=\"Correo\" required>\n          <TextInput name=\"user\" type=\"email\" ref={register} />\n        </FormField>\n        <FormField\n          name=\"password\"\n          maxLength={50}\n          minLength={4}\n          label=\"Contraseña\"\n          required\n        >\n          <TextInput\n            name=\"password\"\n            icon={<Lock />}\n            ref={register}\n            placeholder=\"****\"\n            type=\"password\"\n          />\n        </FormField>\n\n        <Button\n          label=\"Registrar\"\n          icon={<LinkNext />}\n          primary\n          secondary={false}\n          type=\"submit\"\n        />\n      </Form>\n    </DashboardLayout>\n  );\n};\n\nexport default RegisterStaff;\n","import React from 'react';\nimport { Box, grommet, Grommet, Heading, DataTable } from 'grommet';\n\nimport { useRouteMatch } from 'react-router-dom';\nimport DashboardLayout from './layouts/main';\n\nexport declare type AlignType = 'left' | 'center' | 'right';\n\nexport default () => {\n  const match = useRouteMatch();\n\n  const columns = [\n    {\n      property: 'name',\n      header: 'Name',\n      primary: true,\n      footer: 'Total',\n    },\n    {\n      property: 'lastname',\n      header: 'Lastname',\n      primary: true,\n      footer: 'Total',\n    },\n    {\n      property: 'location',\n      header: 'location',\n    },\n  ];\n\n  const DATA = [\n    {\n      name: 'Alan',\n      lastname: 'Alan',\n      location: '',\n    },\n    {\n      name: 'Bryan',\n      lastname: 'Alan',\n      location: 'Mz8968-V8',\n    },\n    {\n      name: 'Chris',\n      lastname: 'Alan',\n      location: 'Mz8968-V8',\n    },\n    {\n      name: 'Eric',\n      lastname: 'Alan',\n      location: 'Mz8968-V8',\n    },\n    {\n      name: 'Doug',\n      lastname: 'Alan',\n      location: 'Mz8968-V8',\n    },\n    {\n      name: 'Jet',\n      lastname: 'Alan',\n      location: 'Mz8968-V8',\n    },\n    {\n      name: 'Michael',\n      lastname: 'Alan',\n      location: 'Mz8968-V8',\n    },\n    {\n      name: 'Tracy',\n      lastname: 'Alan',\n      location: 'Mz8968-V8',\n    },\n  ];\n\n  return (\n    <DashboardLayout actions={[{ type: 'add', to: `${match.path}/register` }]}>\n      <Heading level=\"3\">Residentes</Heading>\n      <Grommet theme={grommet}>\n        <Box align=\"center\" pad=\"large\">\n          <DataTable columns={columns} data={DATA} />\n        </Box>\n      </Grommet>\n    </DashboardLayout>\n  );\n};\n","import React from 'react';\nimport { Heading, Box, Select, TextInput, Button, DateInput } from 'grommet';\nimport { Lock, LinkNext } from 'grommet-icons';\nimport { useForm } from 'react-hook-form';\nimport DashboardLayout from './layouts/main';\n\ntype FormData = {\n  user: string;\n  password: string;\n};\n\ntype RegisterError = {\n  message: string;\n};\n\nexport default () => {\n  const [value, setValue] = React.useState();\n  return (\n    <DashboardLayout>\n      <Heading level=\"3\">Pago Alicuota</Heading>\n      <Box\n        direction=\"column\"\n        border={{ color: 'brand', size: 'large' }}\n        pad=\"medium\"\n        gap=\"medium\"\n      >\n        <Select\n          options={['0001', '0002', '00003']}\n          value={value}\n          onChange={({ option }) => setValue(option)}\n        />\n        <TextInput placeholder=\"type here\" type=\"number\" value={value} />\n        <Button primary label=\"Pagar\" />\n      </Box>\n    </DashboardLayout>\n  );\n};\n","import React from 'react';\nimport { ClientContext } from 'graphql-hooks';\nimport './App.css';\nimport {\n  Route,\n  Switch,\n  Redirect,\n  BrowserRouter as Router,\n} from 'react-router-dom';\nimport { client } from './GraphQLClient';\nimport Login from './components/login/Page';\nimport Home from './components/HomePage';\nimport { useAuth } from './Auth';\nimport NotFound from './components/NotFound';\nimport RegisterResident from './components/RegisterResidentPage';\nimport ResidentPage from './components/ResidentsPage';\nimport RegisterStaff from './components/RegisterStaff';\nimport StaffPage from './components/StaffPage';\nimport RegisterPayment from './components/RegisterPayment';\n\nfunction App() {\n  const [logged] = useAuth();\n\n  return (\n    <ClientContext.Provider value={client}>\n      <Router>\n        {!logged && (\n          <Switch>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Redirect to=\"/login\" />\n          </Switch>\n        )}\n        {logged && (\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/residents/register\">\n              <RegisterResident />\n            </Route>\n            <Route exact path=\"/residents\">\n              <ResidentPage />\n            </Route>\n            <Route exact path=\"/staff/register\">\n              <RegisterStaff />\n            </Route>\n            <Route exact path=\"/staff\">\n              <StaffPage />\n            </Route>\n            <Route exact path=\"/alicuots\">\n              <RegisterPayment />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        )}\n      </Router>\n    </ClientContext.Provider>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-console */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// if (process.env.NODE_ENV === 'development') {\n//   // eslint-disable-next-line global-require\n//   const worker = require('./mocks/browser');\n//   worker.default.start();\n// }\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}